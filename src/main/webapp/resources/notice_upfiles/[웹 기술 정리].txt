[웹 기술 정리]

[웹 서버란?]
웹서버는 클라이언트(브라우저)로부터 HTTP 요청을 받아 HTML, CSS, 이미지, 동영상 등 웹 콘텐츠를 전송하거나, 웹 애플리케이션의 동적인 처리를 중계하는 서버입니다. 웹서버의 종류는 기능, 운영체제, 성능, 라이선스 등에 따라 여러 가지가 있습니다. 대표적인 웹서버의 종류는 다음과 같습니다:

1. Apache HTTP Server (아파치)
- 가장 널리 사용되는 오픈소스 웹서버
- 다양한 운영체제 지원 (Linux, Windows 등)
- 모듈 구조로 다양한 기능 확장 가능 (예: PHP 연동, 보안 모듈 등)
- 대규모 웹사이트부터 소규모까지 다양하게 사용

 2. Nginx (엔진엑스)
- 고성능, 이벤트 기반 웹서버
- 정적 파일 서비스에 매우 빠르고 효율적
- 리버스 프록시, 로드 밸런싱 기능이 뛰어남
- Apache보다 적은 리소스로 높은 동시접속 처리 가능

 3. Microsoft IIS (Internet Information Services)
- Windows 운영체제에서 사용되는 웹서버
- ASP.NET, .NET 기반 웹 애플리케이션과 호환성 우수
- GUI 기반 관리 툴 제공 (초보자도 설정 편리)
- 윈도우 서버 라이선스 필요

 4. LiteSpeed
- Apache와 호환되는 상업용 웹서버
- 빠른 정적/동적 콘텐츠 처리
- DDoS 방어 기능 등 보안 기능 강화
- 고성능 WordPress 호스팅에서 자주 사용

 5. Tomcat
- 자바 서블릿과 JSP를 실행하기 위한 웹 애플리케이션 서버
- 단독으로 웹서버 기능도 수행 가능하지만, 일반적으로 Apache나 Nginx와 함께 사용

 6. Caddy
- 자동 HTTPS(SSL 인증서 갱신 포함) 기능 제공
- 간단한 설정 파일로 사용 가능 (개발 및 테스트용으로 인기 있음)
- Go 언어로 개발된 모던 웹서버

-------------------------------------------------------------------------------------------------------

웹 브라우저란?
서버에서 보내온 HTML 파일은 단순한 텍스트(TEXT) 형태의 소스 파일이다. 이것을 예쁜 그림
과 사운드 등의 멀티미디어 요소를 조합하여 보기 좋게 보여주거나, 페이지 간의 링크가 기능
을 발휘하기 위해서는 HTML 해석기가 필요하다. 이런 역할을 하는 것이 바로 웹 브라우저다

--------------------------------------------------------------------------------------------------------

프로토콜의 이해와 종류
웹 사이트가 구동되기 위해선 수많은 기술이 복합적으로 엮여서 돌아가야 한다. 그중 대표적인 몇 가지 프로토콜은 다음과 같다.

• HTTP 프로토콜: HTML 파일을 전송하기 위한 하이퍼텍스트 전송규약. 주로 사파리, 크롬, 파이어폭스,
인터넷 익스플로러 등의 브라우저를 이용한다.
• FTP 프로토콜: 대량의 파일을 수신하기 위한 파일 전송규약. 주로 알FTP, CuteFTP, FileZila 등의 유틸
리티를 이용한다. FTP 사용법은 보통 웹 호스팅 업체의 사이트를 방문해보면 고객지원 페이지에 잘
정리되어 있다(http://ivyro.net/html/manual/manual_4.php).
• TELNET 프로토콜: 원격지의 서버 컴퓨터를 원격제어 하기 위한 규약. 보안상 Telnet보다 SSH를 사용
한다. 리눅스 기반 접속 툴로는 Putty, Z-term 등을 이용한다.

---------------------------------------------------------------------------------------------------------------

서버 측 주요 언어의 종류

• JSP: 운영체제의 구애를 받지 않으며 실행된다. 톰캣(Tomcat) 컨테이너 위에서 자바 기반의 언어를 사
용하고, 서버에서는 Oracle 또는 MySQL 등의 DBMS와 주로 연동된다.
• ASP: 윈도우 기반의 IIS 서버에서만 동작한다. MS-SQL DBMS와 연동된다. 최근 들어 ASP.Net 또는
C#.Net 형태로 발전되었다.
• PHP: 리눅스 기반에 아파치(Apache) 서버에서 동작한다. 기존에 제로보드나 그누보드와 같은 사이트
빌더에서 기본적으로 사용되는 언어다. 최근에는 워드프레스 등 PHP 기반의 사이트 빌더들이 제작자
에게 인기를 얻고 있다.
• node.js: 흔히 “노드제이에스” 또는 “노드”라고 하는 자바스크립트 라이브러리로서, 소켓을 이용하여
쉽게 실시간 서버를 구축 가능하도록 한다. 

--------------------------------------------------------------------------------------------------------------------------

클라이언트 측 주요 언어의 종류
클라이언트 측 주요 언어에는 다음과 같은 것들이 있다.

• HTML: 하이퍼텍스트를 구현하기 위한 뼈대가 되는 핵심적인 기술인 마크업 언어다.
• 자바스크립트(Javascript): 로컬의 브라우저에서 실행되는 인터프리터 방식의 프로그래밍 언어다. 우리
는 앞으로 이것에 대해서 아주 긴 얘기를 할 것이다.
• CSS: HTML은 뼈대이고, 자바스크립트가 기능이라면, CSS는 꾸미기 위한 옷의 기능이라고 할 수 있다.
• jQuery: 자바스크립트의 코드가 길어지면 사용하기 복잡해지는 단점을 파격적으로 개선한, 존 레식
(John Resig)이 창안한 자바스크립트 기반의 라이브러리 중 하나다.
